<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="search_txt.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASEAAAAeCAYAAABjRqjXAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAMYSURBVHhe7d2/SxthHMdxx44dHTt27Nixf0L/gWInE38c
        Xs8kXhShCEHByYAKhQpxMGJBKDhUwQwOVnDQDiJCCRQpDqaNpzYWHdLno49USRpTkyttfb/gQdTzziUf
        vs/zfHmuBQD+Se3t7Q+j0ajvuu5EPB7f0Ojo6CgzGIz/f1x+5j3Py5jvX5oseGyjIVydnZ2teqgJnv1k
        MhnMz8+fLS8vl3d2ds4HgLvh8jO/srJSXlhYKA8NDRV7enqCWCz2xuTEIxsZzWNuft+kXto8INBDC4WC
        /VcA4EIQBOXV1dXy4ODggQ2jVhshjVGZ1dvbWzRpd3J6emofBwC/pjBS0WJmTc9slNyOqX5epFKp/VKp
        ZG8NAPVR0TI+Pv7V9/0JGym/J5FIvJ6amipS/QBohJlFHSaTybc2Wupjpl/JmZmZwN4DABqyuLhYUmFj
        I6a2SCTyZGRkZJ8KCEAzaWp24xqRVrNNWhVYAwLQbCpsBgYGvqjH0EbOT6b6eaCvZhr2amlp6cz+DQA0
        1ebmpnbNcldz55w6ILUV7/s+C9EAQqXGRuWNcsdG0EUIdXd3f9TePgCESZ3Wrut+qgghDXU8AkCYNNty
        HOekIoRUItlrACBUk5OTQUUIpdPpQ/t7AAjV7Ozs94oQ6urqOmNRGsCfEI/Hj6qF0NHW1pa9BADCsbu7
        q7w5rgghM6Kjo6OsCwEIVSaTOXRd17kWQpFI5Lm+qolIzUQAEAZVQZ7n5ZU3VQ8/0w91IJG9HgCaamxs
        7MBUQE9t5FSXSCRSc3NzBBGApsrlcqW+vr6sjZrazIXv1tbW2CoD0BTqkja5st7W1nbPxkxtutBURB8I
        IgCNUgD19/dv66x6GzH1URCpIuJwMwC3Zadg678dQFfplMXh4eFiPp+3twWA2vRGHi1Caw2o7ilYLTpt
        MRaLbeume3t79jEAcJ3CJ5vNHuvdhDfugt2Gbup53me1XE9PT39Th7X2/QHcTSpKtOajF6HqhagKH8dx
        YjYywqMT0dRhbaqj92o8Uucjg8G4e8MWJRt6JXzVY1sB4O/W0vIDgGf3qXz/7bEAAAAASUVORK5CYII=
</value>
  </data>
</root>